name: Auto-create Idea Issues from README

on:
  push:
    paths:
      - "README.md"
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  create-issues:
    runs-on: ubuntu-latest
    
    container:
      image: ghcr.io/catthehacker/ubuntu:act-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    
    - name: Set up GitHub CLI
      run: |
        apt update
        apt install -y curl gnupg
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
          > /etc/apt/sources.list.d/github-cli.list
        apt update
        apt install gh -y

    - name: Authenticate GitHub CLI
      run: gh auth setup-git
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Ideas and Create Issues
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract idea sections from the README.md
        csplit -f idea_ -z README.md '/^### Idea/' '{*}'
        
        # Remove the first file (content before the first idea)
        if [ -f idea_00 ]; then
          rm idea_00
        fi
        
        # Create a file to store issue URLs for the README update
        > issue_urls.txt
        
        # Process each idea file
        for f in idea_*; do
          # Extract title from the first line
          title=$(head -n 1 "$f" | sed 's/^### Idea[: -]* *//')
          
          # Get the rest as body
          body=$(tail -n +2 "$f")
          
          echo "Processing idea: $title"
          
          # Check if issue with this title already exists
          existing_issue=$(gh issue list --state all --limit 100 --json title,url --jq ".[] | select(.title == \"$title\") | .url")
          
          if [ -z "$existing_issue" ]; then
            echo "Creating new issue for: $title"
            issue_url=$(gh issue create --title "$title" --body "### Idea \n\n$body\n\nVote by adding üëç to this issue!" --label "idea" --json url | jq -r '.url')
            echo "Created issue: $issue_url"
          else
            echo "Issue already exists: $existing_issue"
            issue_url="$existing_issue"
          fi
          
          # Store the issue URL with its title for README update
          echo "$title|$issue_url" >> issue_urls.txt
        done
        
        # Update README.md with issue links for voting
        cp README.md README.md.bak
        
        # Process README line by line
        while IFS= read -r line; do
          if [ "$(echo "$line" | grep -E '^###[ ]+Idea')" ]; then
            # Extract the title from the line
            title=$(echo "$line" | sed 's/^### Idea[: -]* *//')
            
            # Find if we have an issue URL for this title
            issue_url=$(grep "^$title|" issue_urls.txt | cut -d'|' -f2)
            
            if [ -n "$issue_url" ]; then
              echo "$line [Vote üëç]($issue_url)"
            else
              echo "$line"
            fi
          else
            echo "$line"
          fi
        done < README.md.bak > README.md

    - name: Commit README changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add README.md
        git diff --staged --quiet || git commit -m "Add voting links to ideas in README"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}